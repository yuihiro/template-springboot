buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
      		url "https://plugins.gradle.org/m2/"
    	}		
	}
	dependencies {  
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

webAppDirName = '../frontend/dist'
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
//[configurations.runtime, configurations.default]*.exclude( module: 'commons-logging' )

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/libs-release" }
 	flatDir {
        dirs 'lib'
    }	
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.projectlombok:lombok:1.16.6')
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.4.3'
	compile group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile group: 'com.google.guava', name: 'guava', version: '21.0'
	//compile('javax.servlet:jstl')
	//compile('servlets.com:cos:05Nov2002')
	compile group: 'org.snmp4j', name: 'snmp4j', version: '2.5.0'
	compile group: 'com.opencsv', name: 'opencsv', version: '3.9'
	compile group: 'net.sf.supercsv', name: 'super-csv', version: '2.4.0'
	compile name: 'snmp-1.3'
	runtime('mysql:mysql-connector-java')
	providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper') 	
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

/*
configurations {
	compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude group: "commons-logging", module: "commons-logging"
}
*/

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

war {
	baseName = rootProject.appName
	version = rootProject.appVersion
	//destinationDir = file('libs') 
	//webInf { from 'src/additionalWebInf' } // adds a file-set to the WEB-INF dir.
	//webXml = file('src/someWeb.xml') // copies a file to WEB-INF/web.xml
	//exclude("build/**")
}

war.doLast {
	ant.unzip(src: war.archivePath, dest: "${buildDir}/exploded")
	copy {
   		from file("${buildDir}/exploded")
   		into file("../dist/exploded")
   	}	
}

springBoot {
  	executable = true
}

configurations {
	providedRuntime
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

task show {
	doLast {
		println "backend"
	}
}


/*
bootRun {
	addResources = false
}
springBoot {
  	mainClass = 'anyclick.wips.App'
}
bootRepackage {
    mainClass = 'nagi.starter.base.SimpleRestApplication'
    executable = true
}
*/